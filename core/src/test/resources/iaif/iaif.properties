filesystemfolder.name = export
ia.aic.criteria.indexed = true,true,true,true,true,true,true,true,true,true,true,true
ia.aic.criteria.label = AIP ID,Bcc,Cc,Distribution list,From,Sent from country,Received date,Recipient,Sent date,Subject,To,Sent to country
ia.aic.criteria.name = aipId,bcc,cc,distributionList,from,fromCountry,receivedDate,recipient,sentDate,subject,to,toCountry
ia.aic.criteria.pkeymaxattr = ,,,,,,pkeys.dateTime02,,,,,
ia.aic.criteria.pkeyminattr = ,,,,,,pkeys.dateTime01,,,,,
ia.aic.criteria.pkeyvaluesattr = aipId,,,,,,,,,,,
ia.aic.criteria.type = STRING,STRING,STRING,STRING,STRING,STRING,DATETIME,STRING,DATETIME,STRING,STRING,STRING
ia.aic.name = Messages
ia.application.name = Communication Archive
ia.exportconfig.PST\u0020Export\u0020Collection.encryptedoptions.names = sftpPassword,sftpUser
ia.exportconfig.PST\u0020Export\u0020Collection.encryptedoptions.sftpPassword.value = test
ia.exportconfig.PST\u0020Export\u0020Collection.encryptedoptions.sftpUser.value = test
ia.exportconfig.PST\u0020Export\u0020Collection.options.names = sftpHost,sftpPath,sftpPort
ia.exportconfig.PST\u0020Export\u0020Collection.options.sftpHost.value = localhost
ia.exportconfig.PST\u0020Export\u0020Collection.options.sftpPath.value = test
ia.exportconfig.PST\u0020Export\u0020Collection.options.sftpPort.value = 2222
ia.exportconfig.PST\u0020Export\u0020Collection.options.xslresultformat.value = pdf
ia.exportconfig.PST\u0020Export\u0020Collection.pipeline = PST Export Collection Pipeline
ia.exportconfig.PST\u0020Export\u0020Collection.transformations.PST\u0020Export\u0020Collection\u0020Transformation.portname = stylesheet
ia.exportconfig.PST\u0020Export\u0020Collection.transformations.PST\u0020Export\u0020Collection\u0020Transformation.transformation = PST Export Collection Transformation
ia.exportconfig.PST\u0020Export\u0020Collection.transformations.names = PST Export Collection Transformation
ia.exportconfig.PST\u0020Export\u0020Collection.type = ASYNCHRONOUS
ia.exportconfig.PST\u0020Export.pipeline = PST Export Pipeline
ia.exportconfig.PST\u0020Export.type = ASYNCHRONOUS
ia.exportconfig.names = PST Export,PST Export Collection
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.collectionbased = true
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.composite = true
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.content = <p:declare-step version="1.0" xmlns:p="http://www.w3.org/ns/xproc" xmlns:ia="http://infoarchive.emc.com/xproc" xmlns:iaif="http://infoarchive.emc.com/iaif/xproc" name="main"> \
 \
  <p:input port="source" sequence="true"/> \
  <p:input port="collection"/> \
  <p:input port="parameters" kind="parameter"/> \
  <p:input port="stylesheet"/> \
 \
  <p:option name="sftpUser" required="false"/> \
  <p:option name="sftpPassword" required="false"/> \
  <p:option name="sftpHost" required="true"/> \
  <p:option name="sftpPort" required="false"/> \
  <p:option name="sftpPath" required="true"/> \
 \
  <ia:pdf name="manifest"> \
    <p:input port="source"> \
      <p:pipe step="main" port="collection"/> \
    </p:input> \
    <p:input port="stylesheet"> \
      <p:pipe step="main" port="stylesheet"/> \
    </p:input> \
  </ia:pdf> \
 \
  <iaif:email-search-results-pst name="pst"> \
    <p:input port="source"> \
      <p:pipe step="main" port="source"/> \
    </p:input> \
  </iaif:email-search-results-pst> \
 \
  <ia:zip name="zip"> \
    <p:input port="source"> \
      <p:pipe step="manifest" port="result"/> \
      <p:pipe step="pst" port="result"/> \
    </p:input> \
  </ia:zip> \
 \
  <ia:sftp-upload> \
    <p:input port="source"> \
      <p:pipe step="zip" port="result"/> \
    </p:input> \
    <p:with-option name="user" select="$sftpUser"/> \
    <p:with-option name="password" select="$sftpPassword"/> \
    <p:with-option name="host" select="$sftpHost"/> \
    <p:with-option name="port" select="$sftpPort"/> \
    <p:with-option name="path" select="$sftpPath"/> \
  </ia:sftp-upload> \
 \
  <ia:store-export-result format="pdf"> \
    <p:input port="source"> \
      <p:pipe step="manifest" port="result"/> \
    </p:input> \
  </ia:store-export-result> \
 \
</p:declare-step>
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.description = Exports PDF
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.envelopeformat = zip
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.includescontent = true
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.inputformat = RAW_XML
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.outputformat = pdf
ia.exportpipeline.PST\u0020Export\u0020Collection\u0020Pipeline.type = XPROC
ia.exportpipeline.PST\u0020Export\u0020Pipeline.composite = true
ia.exportpipeline.PST\u0020Export\u0020Pipeline.content = <p:declare-step version="1.0" xmlns:p="http://www.w3.org/ns/xproc" xmlns:ia="http://infoarchive.emc.com/xproc" xmlns:iaif="http://infoarchive.emc.com/iaif/xproc"> \
  <p:input port="source" sequence="true"/> \
  <iaif:email-search-results-pst/> \
  <ia:zip/> \
  <ia:store-export-result format="pst"/> \
</p:declare-step>
ia.exportpipeline.PST\u0020Export\u0020Pipeline.description = Exports PST
ia.exportpipeline.PST\u0020Export\u0020Pipeline.envelopeformat = zip
ia.exportpipeline.PST\u0020Export\u0020Pipeline.includescontent = true
ia.exportpipeline.PST\u0020Export\u0020Pipeline.inputformat = RAW_XML
ia.exportpipeline.PST\u0020Export\u0020Pipeline.outputformat = pst
ia.exportpipeline.PST\u0020Export\u0020Pipeline.type = XPROC
ia.exportpipeline.names = PST Export Collection Pipeline,PST Export Pipeline
ia.exporttransformation.PST\u0020Export\u0020Collection\u0020Transformation.description = pdf xsl transformation
ia.exporttransformation.PST\u0020Export\u0020Collection\u0020Transformation.mainpath = manifest.xsl
ia.exporttransformation.PST\u0020Export\u0020Collection\u0020Transformation.type = XSLT
ia.exporttransformation.names = PST Export Collection Transformation
ia.holding.name = Messages
ia.ingest.xml = <processors> \
  <processor> \
    <name>SIP downloader processor</name> \
    <class>com.emc.ia.ingestion.processor.downloader.SipContentDownloader</class> \
  </processor> \
  <processor> \
    <name>SIP Decrypter processor</name> \
    <class>com.emc.ia.ingestion.processor.crypto.SipDecryptProcessor</class> \
    <id>sip.decrypt</id> \
  </processor> \
  <processor> \
    <name>SIP extractor processor</name> \
    <class>com.emc.ia.ingestion.processor.extractor.SipExtractor</class> \
    <id>sip.extractor</id> \
    <data> \
      <pdi.name>eas_pdi.xml</pdi.name> \
      <sip.name>eas_sip.xml</sip.name> \
    </data> \
  </processor> \
  <processor> \
    <name>PDI hash validation processor</name> \
    <class>com.emc.ia.ingestion.processor.hash.PdiHashValidatorProcessor</class> \
  </processor> \
  <processor> \
    <name>PDI schema validator processor</name> \
    <class>com.emc.ia.ingestion.processor.validator.PdiSchemaValidator</class> \
    <data> \
      <id>pdi.validation</id> \
      <parameter> \
        <are.whiteSpaces.ignored>false</are.whiteSpaces.ignored> \
      </parameter> \
    </data> \
  </processor> \
  <processor> \
    <name>PDI data encryption</name> \
    <class>com.emc.ia.ingestion.processor.crypto.PdiDataEncryptProcessor</class> \
    <id>pdi.data.encrypt</id> \
  </processor> \
  <processor> \
    <name>XDB Library creator processor</name> \
    <class>com.emc.ia.ingestion.processor.library.LibraryCreatorProcessor</class> \
  </processor> \
  <processor> \
    <name>XDB SIP importer processor</name> \
    <class>com.emc.ia.ingestion.processor.importer.SipImporterProcessor</class> \
  </processor> \
  <processor> \
    <name>XDB PDI importer processor</name> \
    <class>com.emc.ia.ingestion.processor.importer.PdiImporterProcessor</class> \
    <id>pdi.xdb.importer</id> \
  </processor> \
  <processor> \
    <name>XDB PDI index processor</name> \
    <class>com.emc.ia.ingestion.processor.index.IndexesCreator</class> \
    <id>pdi.index.creator</id> \
    <data> \
      <key.document.name>xdb.pdi.name</key.document.name> \
      <indexes /> \
    </data> \
  </processor> \
  <processor> \
    <name>PDI AIU Ids processor</name> \
    <class>com.emc.ia.ingestion.processor.aiu.PdiAiuIdProcessor</class> \
    <id>pdi.aiu.id</id> \
  </processor> \
  <processor> \
    <name>PDI AIU count processor</name> \
    <class>com.emc.ia.ingestion.processor.aiu.PdiAiuCountProcessor</class> \
    <id>pdi.aiu.cnt</id> \
  </processor> \
  <processor> \
    <name>XDB AIU index processor</name> \
    <class>com.emc.ia.ingestion.processor.index.IndexesCreator</class> \
    <id>xdb.pdi.aiu.index</id> \
    <data> \
      <key.document.name>xdb.pdi.name</key.document.name> \
      <indexes> \
        <value.index> \
          <name>pdi.aiu.id</name> \
          <compressed>false</compressed> \
          <unique.keys>true</unique.keys> \
          <concurrent>false</concurrent> \
          <value.index.type>STRING</value.index.type> \
          <element.uri /> \
          <element.name /> \
          <attribute.uri>urn:x-emc:ia:schema:pdi</attribute.uri> \
          <attribute.name>id</attribute.name> \
        </value.index> \
      </indexes> \
    </data> \
  </processor> \
  <processor> \
    <name>PDI Partition Keys processor</name> \
    <class>com.emc.ia.ingestion.processor.partition.PartitionValuesProcessor</class> \
    <id>pdi.pkeys</id> \
  </processor> \
  <processor> \
    <name>PDI XML compression processor</name> \
    <class>com.emc.ia.ingestion.processor.compress.PdiCompressionProcessor</class> \
  </processor> \
  <processor> \
    <name>PDI XML encryption processor</name> \
    <class>com.emc.ia.ingestion.processor.crypto.PdiFileEncryptProcessor</class> \
    <id>pdi.encrypt</id> \
  </processor> \
  <processor> \
    <name>RI creation</name> \
    <class>com.emc.ia.ingestion.processor.content.InitRiProcessor</class> \
    <id>ri.init</id> \
    <data> \
      <select.query>return</select.query> \
    </data> \
  </processor> \
  <processor> \
    <name>RI XDB indexes</name> \
    <class>com.emc.ia.ingestion.processor.index.IndexesCreator</class> \
    <id>ri.index</id> \
    <data> \
      <key.document.name>xdb.ri.name</key.document.name> \
      <indexes> \
        <path.value.index> \
          <name>key</name> \
          <path>/{urn:x-emc:ia:schema:ri}ris/{urn:x-emc:ia:schema:ri}ri[@key&lt;STRING>]</path> \
          <compressed>false</compressed> \
          <unique.keys>true</unique.keys> \
          <concurrent>false</concurrent> \
          <build.without.logging>true</build.without.logging> \
        </path.value.index> \
        <path.value.index> \
          <name>seqno</name> \
          <path>/{urn:x-emc:ia:schema:ri}ris/{urn:x-emc:ia:schema:ri}ri[@seqno&lt;LONG>]</path> \
          <compressed>false</compressed> \
          <unique.keys>true</unique.keys> \
          <concurrent>false</concurrent> \
          <build.without.logging>true</build.without.logging> \
        </path.value.index> \
      </indexes> \
    </data> \
  </processor> \
  <processor> \
    <name>CI hash generator and validator</name> \
    <class>com.emc.ia.ingestion.processor.content.CiHashProcessor</class> \
    <id>ci.hash</id> \
    <data> \
      <select.query><![CDATA[declare namespace ri = "urn:x-emc:ia:schema:ri"; \
let $uri := replace(document-uri(.), '\\.pdi$', '.ri') \
for $c in doc($uri)/ri:ris/ri:ri \
return <content filename="{ $c/@key }"> \
<hash encoding="hex" algorithm="SHA-1" provided="false" /> \
</content>]]></select.query> \
    </data> \
  </processor> \
  <processor> \
    <name>CI compression</name> \
    <class>com.emc.ia.ingestion.processor.content.CiCompressProcessor</class> \
    <id>ci.compress</id> \
    <data> \
      <select.query>return</select.query> \
    </data> \
  </processor> \
  <processor> \
    <name>CI encryptor</name> \
    <class>com.emc.ia.ingestion.processor.crypto.CiEncryptProcessor</class> \
    <id>ci.encrypt</id> \
  </processor> \
  <processor> \
    <name>CI aggregator</name> \
    <class>com.emc.ia.ingestion.processor.content.CiAggregateProcessor</class> \
    <id>ci.aggregate</id> \
    <data> \
      <select.query> \
        <![CDATA[declare namespace ri = "urn:x-emc:ia:schema:ri"; \
let $toc as document-node(element(ri:ris)) := doc(concat("aip_",xhive:metadata(., 'aip_id'),'.ri')) \
return $toc/ri:ris/ri:ri/string(@key)]]> \
      </select.query> \
    </data> \
  </processor> \
  <processor> \
    <name>RiContentProcessor</name> \
    <class>com.emc.ia.ingestion.processor.content.RiContentProcessor</class> \
    <id>ri.content</id> \
  </processor> \
  <processor> \
    <name>Add CI IDs in PDI</name> \
    <class>com.emc.ia.ingestion.processor.content.PdiContentIdProcessor</class> \
    <id>xdb.pdi.ci.id</id> \
    <data /> \
  </processor> \
  <processor> \
    <name>PDI CI indexes</name> \
    <class>com.emc.ia.ingestion.processor.index.IndexesCreator</class> \
    <id>xdb.pdi.ci.index</id> \
    <data> \
      <key.document.name>xdb.pdi.name</key.document.name> \
      <indexes> \
        <value.index> \
          <name>pdi.ci.id</name> \
          <compressed>false</compressed> \
          <unique.keys>false</unique.keys> \
          <concurrent>false</concurrent> \
          <value.index.type>STRING</value.index.type> \
          <element.uri /> \
          <element.name /> \
          <attribute.uri>urn:x-emc:ia:schema:pdi</attribute.uri> \
          <attribute.name>cid</attribute.name> \
        </value.index> \
      </indexes> \
    </data> \
  </processor> \
  <processor> \
    <name>Contents uploader</name> \
    <class>com.emc.ia.ingestion.processor.uploader.ContentsUploader</class> \
  </processor> \
  <processor> \
    <transaction /> \
    <name>XDB library backup</name> \
    <class>com.emc.ia.ingestion.processor.backup.BackupProcessor</class> \
  </processor> \
  <processor> \
    <name>PDI Transformer</name> \
    <class>com.emc.ia.ingestion.processor.transformer.PdiTransformerProcessor</class> \
    <id>pdi.transformer</id> \
    <data> \
      <resultSchema></resultSchema> \
    </data> \
  </processor> \
  <processor> \
    <name>Synchronous commit</name> \
    <class>com.emc.ia.ingestion.processor.commit.CommitProcessor</class> \
  </processor> \
</processors> \

ia.pdi.schema = <!-- \
  Copyright (c) 2015 EMC Corporation. All Rights Reserved. \
  EMC Confidential: Restricted Internal Distribution \
--> \
<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" \
    xmlns:message="urn:emc:ia:schema:message:1.0" targetNamespace="urn:emc:ia:schema:message:1.0"> \
 \
  <xs:element name="messages"> \
    <xs:complexType> \
      <xs:sequence> \
        <xs:element name="message" minOccurs="1" maxOccurs="unbounded" type="message:message"/> \
      </xs:sequence> \
    </xs:complexType> \
  </xs:element> \
 \
  <xs:complexType name="message"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/Message"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:creativeWork"> \
        <xs:sequence> \
          <xs:element name="sender" type="message:person"> \
            <xs:annotation> \
              <xs:documentation>The participant who is at the sending end of the action.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="recipient" type="message:person" minOccurs="0" maxOccurs="unbounded"> \
            <xs:annotation> \
              <xs:documentation>The participant who is at the receiving end of the action.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="dateSent" type="message:dateTime" minOccurs="0"> \
            <xs:annotation> \
              <xs:documentation>The date/time the message was sent.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="messageAttachment" minOccurs="0" maxOccurs="unbounded" type="message:creativeWork"> \
            <xs:annotation> \
              <xs:documentation>A CreativeWork attached to the message.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="creativeWork"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/CreativeWork"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="about" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The subject matter of the content.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="audio" minOccurs="0" type="message:audioObject"> \
            <xs:annotation> \
              <xs:documentation>An embedded audio object.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="encoding" minOccurs="0" maxOccurs="unbounded" type="message:mediaObject"> \
            <xs:annotation> \
              <xs:documentation>A media object that encodes this CreativeWork.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="fileFormat" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>Media type (aka MIME format, see IANA site) of the content.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="hasPart" minOccurs="0" maxOccurs="unbounded" type="message:creativeWork"> \
            <xs:annotation> \
              <xs:documentation>Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="inLanguage" minOccurs="0" type="message:language"> \
            <xs:annotation> \
              <xs:documentation>The language of the content.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="isBasedOn" minOccurs="0" type="message:creativeWork"> \
            <xs:annotation> \
              <xs:documentation>A resource that was used in the creation of this resource.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="isPartOf" minOccurs="0" type="message:creativeWork"> \
            <xs:annotation> \
              <xs:documentation>Indicates a CreativeWork that this CreativeWork is (in some sense) part of.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="keywords" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation> \
                Keywords or tags used to describe this content. Multiple entries in a keywords list are typically \
                delimited by commas. \
              </xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="mentions" minOccurs="0" maxOccurs="unbounded" type="message:thing"> \
            <xs:annotation> \
              <xs:documentation> \
                Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept. \
              </xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="producer" minOccurs="0" type="message:thing"> \
            <xs:annotation> \
              <xs:documentation>The person or organization who produced the work.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="text" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The textual content of this CreativeWork.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="video" minOccurs="0" type="message:videoObject"> \
            <xs:annotation> \
              <xs:documentation>An embedded video object.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="thing"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/Thing"/> \
    </xs:annotation> \
    <xs:sequence> \
      <xs:element name="additionalType" minOccurs="0" maxOccurs="unbounded" type="message:url"> \
        <xs:annotation> \
          <xs:documentation> \
            An additional type for the item, typically used for adding more specific types from external vocabularies. \
          </xs:documentation> \
        </xs:annotation> \
      </xs:element> \
      <xs:element name="alternateName" minOccurs="0" type="message:text"> \
        <xs:annotation> \
          <xs:documentation>An alias for the item.</xs:documentation> \
        </xs:annotation> \
      </xs:element> \
      <xs:element name="name" minOccurs="0" type="message:text"> \
        <xs:annotation> \
          <xs:documentation>The name of the item.</xs:documentation> \
        </xs:annotation> \
      </xs:element> \
      <xs:element name="description" minOccurs="0" type="message:text"> \
        <xs:annotation> \
          <xs:documentation>A description of the item.</xs:documentation> \
        </xs:annotation> \
      </xs:element> \
      <xs:element name="url" minOccurs="0" type="message:url"> \
        <xs:annotation> \
          <xs:documentation>URL of the item.</xs:documentation> \
        </xs:annotation> \
      </xs:element> \
      <xs:element name="custom" minOccurs="0"> \
        <xs:annotation> \
          <xs:documentation>Extension point. Anything can go in here.</xs:documentation> \
        </xs:annotation> \
        <xs:complexType> \
          <xs:sequence minOccurs="0" maxOccurs="unbounded"> \
            <xs:any processContents="skip"/> \
          </xs:sequence> \
        </xs:complexType> \
      </xs:element> \
    </xs:sequence> \
  </xs:complexType> \
 \
  <xs:simpleType name="url"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/URL"/> \
    </xs:annotation> \
    <xs:restriction base="xs:anyURI"/> \
  </xs:simpleType> \
 \
  <xs:complexType name="person"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/Person"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="account" minOccurs="0" type="message:onlineAccount"> \
            <xs:annotation> \
              <xs:documentation>Indicates an account held by this person.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="affiliation" minOccurs="0" type="message:organization"> \
            <xs:annotation> \
              <xs:documentation>An organization that this person is affiliated with.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="email" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>Email address.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="jobTitle" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The job title of the person.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="memberOf" minOccurs="0" type="message:programMembership"> \
            <xs:annotation> \
              <xs:documentation>An Organization (or ProgramMembership) to which this Person or Organization belongs.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="nationality" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>Nationality of the person.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="telephone" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The telephone number.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="workLocation" minOccurs="0" type="message:place"> \
            <xs:annotation> \
              <xs:documentation>A contact location for a person's place of work.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="worksFor" minOccurs="0" type="message:organization"> \
            <xs:annotation> \
              <xs:documentation>Organization that the person works for.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="programMembership"> \
    <xs:annotation> \
      <xs:appinfo source="https://schema.org/ProgramMembership"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="programName"> \
            <xs:annotation> \
              <xs:documentation>The program providing the membership.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
   \
  <xs:complexType name="address"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/PostalAddress"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="addressCountry" type="message:country" minOccurs="0"> \
            <xs:annotation> \
              <xs:documentation>The 2- or 3-letter ISO 3166 country code.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="addressLocality" type="message:text" minOccurs="0"/> \
          <xs:element name="addressRegion" type="message:text" minOccurs="0"/> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:simpleType name="dateTime"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/DateTime"/> \
    </xs:annotation> \
    <xs:restriction base="xs:dateTime"/> \
  </xs:simpleType> \
 \
  <xs:simpleType name="text"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/Text"/> \
    </xs:annotation> \
    <xs:restriction base="xs:string"/> \
  </xs:simpleType> \
 \
  <xs:simpleType name="language"> \
    <xs:restriction base="xs:string"> \
      <xs:pattern value="[A-Z]{2}(-[A-Z]{2})?"/> \
    </xs:restriction> \
  </xs:simpleType> \
 \
  <xs:simpleType name="country"> \
    <xs:restriction base="xs:string"> \
      <xs:pattern value="[A-Z]{2,3}"/> \
    </xs:restriction> \
  </xs:simpleType> \
 \
  <xs:complexType name="mediaObject"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/MediaObject"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:creativeWork"> \
        <xs:sequence> \
          <xs:element name="contentSize" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>File size in (mega/kilo) bytes.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="contentUrl" minOccurs="0" type="message:url"> \
            <xs:annotation> \
              <xs:documentation>Actual bytes of the media object.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="encodingFormat" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>Media type (aka MIME format, see IANA site) of the content.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="organization"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/Organization"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="address" type="message:address" minOccurs="0"> \
            <xs:annotation> \
              <xs:documentation>Physical address of the person.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="department" type="message:organization" minOccurs="0"> \
            <xs:annotation> \
              <xs:documentation> \
                A relationship between an organization and a department of that organization. \
              </xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="audioObject"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/AudioObject"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:mediaObject"> \
        <xs:sequence> \
          <xs:element name="transcript" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The transcript of the audio.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="videoObject"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/VideoObject"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:mediaObject"> \
        <xs:sequence> \
          <xs:element name="thumbnail" minOccurs="0" type="message:imageObject"> \
            <xs:annotation> \
              <xs:documentation>Thumbnail image for the video.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="transcript" minOccurs="0" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The transcript of the audio.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="imageObject"> \
    <xs:annotation> \
      <xs:appinfo source="http://schema.org/ImageObject"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:mediaObject"/> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="onlineAccount"> \
    <xs:annotation> \
      <xs:appinfo source="http://xmlns.com/foaf/spec/#term_account"/> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="accountName" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>Indicates the name (identifier) associated with this online account.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="place"> \
    <xs:annotation> \
      <xs:documentation>Entities that have a somewhat fixed, physical extension.</xs:documentation> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="additionalProperty" type="message:propertyValue" minOccurs="0" maxOccurs="unbounded"> \
            <xs:annotation> \
              <xs:documentation> \
                A property-value pair representing an additional characteristics of the entitity. \
              </xs:documentation> \
            </xs:annotation> \
          </xs:element> \
          <xs:element name="branchCode" type="message:text" minOccurs="0"> \
            <xs:annotation> \
              <xs:documentation>A short textual code that uniquely identifies a place of business.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
  <xs:complexType name="propertyValue"> \
    <xs:annotation> \
      <xs:documentation> \
        A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name \
        of the property. \
      </xs:documentation> \
    </xs:annotation> \
    <xs:complexContent> \
      <xs:extension base="message:thing"> \
        <xs:sequence> \
          <xs:element name="value" type="message:text"> \
            <xs:annotation> \
              <xs:documentation>The value of the quantitative value or property value node.</xs:documentation> \
            </xs:annotation> \
          </xs:element> \
        </xs:sequence> \
      </xs:extension> \
    </xs:complexContent> \
  </xs:complexType> \
 \
</xs:schema> \

ia.pdi.schema.name = urn:emc:ia:schema:message:1.0
ia.pdi.xml = <?xml version="1.0" encoding="UTF-8"?> \
<datas> \
  <data> \
    <id>pdi.index.creator</id> \
    <key.document.name>xdb.pdi.name</key.document.name> \
    <indexes> \
      <path.value.index> \
        <name>dateSent</name> \
        <path>/{urn:emc:ia:schema:message:1.0}messages/{urn:emc:ia:schema:message:1.0}message[{urn:emc:ia:schema:message:1.0}dateSent&lt;DATE_TIME>]</path> \
        <compressed>false</compressed> \
        <unique.keys>false</unique.keys> \
        <concurrent>false</concurrent> \
        <build.without.logging>true</build.without.logging> \
      </path.value.index> \
      <path.value.index> \
        <name>dateReceived</name> \
        <path>/{urn:emc:ia:schema:message:1.0}messages/{urn:emc:ia:schema:message:1.0}message[{urn:emc:ia:schema:message:1.0}dateReceived&lt;DATE_TIME>]</path> \
        <compressed>false</compressed> \
        <unique.keys>false</unique.keys> \
        <concurrent>false</concurrent> \
        <build.without.logging>true</build.without.logging> \
      </path.value.index> \
      <path.value.index> \
        <name>sender</name> \
        <path>/{urn:emc:ia:schema:message:1.0}messages/{urn:emc:ia:schema:message:1.0}message[{urn:emc:ia:schema:message:1.0}sender/{urn:emc:ia:schema:message:1.0}email&lt;STRING>]</path> \
        <compressed>false</compressed> \
        <unique.keys>false</unique.keys> \
        <concurrent>false</concurrent> \
        <build.without.logging>true</build.without.logging> \
      </path.value.index> \
      <path.value.index> \
        <name>recipient</name> \
        <path>/{urn:emc:ia:schema:message:1.0}messages/{urn:emc:ia:schema:message:1.0}message[{urn:emc:ia:schema:message:1.0}recipient/{urn:emc:ia:schema:message:1.0}email&lt;STRING>]</path> \
        <compressed>false</compressed> \
        <unique.keys>false</unique.keys> \
        <concurrent>false</concurrent> \
        <build.without.logging>true</build.without.logging> \
      </path.value.index> \
      <path.value.index> \
        <name>toCountry</name> \
        <path>/{urn:emc:ia:schema:message:1.0}messages/{urn:emc:ia:schema:message:1.0}message[{urn:emc:ia:schema:message:1.0}recipient/{urn:emc:ia:schema:message:1.0}address/{urn:emc:ia:schema:message:1.0}addressCountry&lt;STRING>]</path> \
        <compressed>false</compressed> \
        <unique.keys>false</unique.keys> \
        <concurrent>false</concurrent> \
        <build.without.logging>true</build.without.logging> \
      </path.value.index> \
      <path.value.index> \
        <name>fromCountry</name> \
        <path>/{urn:emc:ia:schema:message:1.0}messages/{urn:emc:ia:schema:message:1.0}message[{urn:emc:ia:schema:message:1.0}sender/{urn:emc:ia:schema:message:1.0}address/{urn:emc:ia:schema:message:1.0}addressCountry&lt;STRING>]</path> \
        <compressed>false</compressed> \
        <unique.keys>false</unique.keys> \
        <concurrent>false</concurrent> \
        <build.without.logging>true</build.without.logging> \
      </path.value.index> \
    </indexes> \
  </data> \
  <data> \
    <id>pdi.aiu.id</id> \
    <select.query><![CDATA[declare namespace n = "urn:emc:ia:schema:message:1.0"; \
for $message in /n:messages/n:message \
return ($message, $message/n:name/text())]]></select.query> \
  </data> \
  <data> \
    <id>pdi.aiu.cnt</id> \
    <select.query><![CDATA[declare namespace n = "urn:emc:ia:schema:message:1.0"; \
count(/n:messages/n:message)]]></select.query> \
  </data> \
  <data> \
    <id>pdi.pkeys</id> \
    <pkey attr="dateTime01"> \
      declare namespace n = "urn:emc:ia:schema:message:1.0"; \
      min(/n:messages/n:message/xs:dateTime(n:dateSent)) \
    </pkey> \
    <pkey attr="dateTime02"> \
      declare namespace n = "urn:emc:ia:schema:message:1.0"; \
      max(/n:messages/n:message/xs:dateTime(n:dateSent)) \
    </pkey> \
  </data> \
  <data> \
    <id>ri.init</id> \
    <select.query> \
      <![CDATA[declare namespace n = "urn:emc:ia:schema:message:1.0"; \
 let $attachments := /n:messages/n:message/n:messageAttachment \
 for $ci in distinct-values($attachments/n:alternateName/text()) \
 let $attachment := $attachments[n:alternateName = $ci][1] \
 let $fileFormat := $attachment/n:fileFormat \
 let $type := if ($fileFormat )then $fileFormat \
 else "application/octet-stream" \
 order by $ci \
 return <content type="{$type}">{ $ci }</content>]]> \
    </select.query> \
  </data> \
  <data> \
    <id>xdb.pdi.ci.id</id> \
    <select.query> \
      <![CDATA[declare namespace n = "urn:emc:ia:schema:message:1.0"; \
declare namespace ri = "urn:x-emc:ia:schema:ri"; \
let $pdi_uri := root(.) \
let $aip_id := xhive:metadata($pdi_uri, 'aip_id') \
let $ri_uri := replace(document-uri($pdi_uri), '\\.pdi$', '.ri') \
for $ri in doc($ri_uri)/ri:ris/ri:ri[@key] \
for $n in /n:messages/n:message/n:messageAttachment/n:alternateName[. = $ri/@key] \
return ($n,concat($aip_id,":ci:",$ri/@seqno))]]> \
    </select.query> \
  </data> \
</datas> \

ia.query.ConfirmationQuery.namespace.prefix = c,n
ia.query.ConfirmationQuery.namespace.uri = urn:emc:ia:schema:message-confirmation:1.0,urn:emc:ia:schema:message:1.0
ia.query.ConfirmationQuery.result.root.element = confirmations
ia.query.ConfirmationQuery.result.root.ns.enabled = true
ia.query.ConfirmationQuery.result.schema = urn:emc:ia:schema:message-confirmation:1.0
ia.query.ConfirmationQuery.xdbpdi.entity.path = /n:messages/n:message
ia.query.ConfirmationQuery.xdbpdi.schema = urn:emc:ia:schema:message:1.0
ia.query.ConfirmationQuery.xdbpdi.template = return <c:confirmation> \
  <c:timeStamp>{$aiu/n:dateSent/text()}</c:timeStamp> \
  <c:origin>{$aiu/n:producer/n:name/text()}</c:origin> \
  <c:containerId>{$aiu/n:isPartOf/n:name/text()}</c:containerId> \
  <c:id>{$aiu/n:name/text()}</c:id> \
  <c:externalId>{$aiu/n:alternateName/text()}</c:externalId> \
</c:confirmation> \

ia.query.DefaultQuery.namespace.prefix = n
ia.query.DefaultQuery.namespace.uri = urn:emc:ia:schema:message:1.0
ia.query.DefaultQuery.result.root.element = result
ia.query.DefaultQuery.result.root.ns.enabled = true
ia.query.DefaultQuery.result.schema = urn:emc:ia:schema:message:1.0
ia.query.DefaultQuery.xdbpdi.entity.path = /n:messages/n:message
ia.query.DefaultQuery.xdbpdi.schema = urn:emc:ia:schema:message:1.0
ia.query.DefaultQuery.xdbpdi.template = return $aiu
ia.query.DefaultQuery.xdbpdi[urn\u003Aemc\u003Aia\u003Aschema\u003Amessage\u003A1.0].operand.index = false,false,true,true,true,true,true,true,false,false,true
ia.query.DefaultQuery.xdbpdi[urn\u003Aemc\u003Aia\u003Aschema\u003Amessage\u003A1.0].operand.name = bcc,cc,distributionList,from,fromCountry,receivedDate,recipient,sentDate,subject,to,toCountry
ia.query.DefaultQuery.xdbpdi[urn\u003Aemc\u003Aia\u003Aschema\u003Amessage\u003A1.0].operand.path = n:recipient[n:additionalType = 'bcc']/n:email,n:recipient[n:additionalType = 'cc']/n:email,n:recipient/n:memberOf/n:programName,n:sender/n:email,n:sender/n:worksFor/n:address/n:addressCountry,n:dateReceived,n:recipient/n:email,n:dateSent,n:about,n:recipient[not(n:additionalType)]/n:email,n:recipient[not(n:additionalType)]/n:worksFor/n:address/n:addressCountry
ia.query.DefaultQuery.xdbpdi[urn\u003Aemc\u003Aia\u003Aschema\u003Amessage\u003A1.0].operand.type = STRING,STRING,STRING,STRING,STRING,DATETIME,STRING,DATETIME,STRING,STRING,STRING
ia.query.name = ConfirmationQuery,DefaultQuery
ia.quota.name = DefaultQuota
ia.result.helper.result_helper.result.schema = urn:emc:ia:schema:message:1.0
ia.result.helper.result_helper.xml = <?xml version="1.0" encoding="UTF-8"?> \
<resultConfigurationHelper xmlns:n="urn:emc:ia:schema:message:1.0" xmlns:ia="urn:x-emc:ia:schema:pdi"> \
  <element> \
    <name>id</name> \
    <label>ID</label> \
    <type>ID</type> \
    <path>@ia:id</path> \
  </element> \
  <element> \
    <name>dateSent</name> \
    <label>Date Sent</label> \
    <type>DATETIME</type> \
    <path>n:dateSent</path> \
  </element> \
  <element> \
    <name>receivedDate</name> \
    <label>Received Date</label> \
    <type>DATETIME</type> \
    <path>n:receivedDate</path> \
  </element> \
  <element> \
    <name>subject</name> \
    <label>Subject</label> \
    <type>STRING</type> \
    <path>n:about</path> \
  </element> \
  <element> \
    <name>sender</name> \
    <label>Sender</label> \
    <type>STRING</type> \
    <path>n:sender/n:email</path> \
  </element> \
  <group> \
    <name>Recipients</name> \
    <label>Recipients</label> \
    <path>n:recipient</path> \
    <element> \
      <name>type</name> \
      <label>Type</label> \
      <type>STRING</type> \
      <path>n:additionalType</path> \
    </element> \
    <element> \
      <name>email</name> \
      <label>Email</label> \
      <type>STRING</type> \
      <path>n:email</path> \
    </element> \
  </group> \
</resultConfigurationHelper> \

ia.retention.policy.name = Messages
ia.search.Find\u0020emails.aic = Messages
ia.search.Find\u0020emails.composition.Set\u00201.result.main.label = Date Sent,Sender,Subject
ia.search.Find\u0020emails.composition.Set\u00201.result.main.name = dateSent,sender,subject
ia.search.Find\u0020emails.composition.Set\u00201.result.main.path = n:dateSent,n:sender/n:email,n:about
ia.search.Find\u0020emails.composition.Set\u00201.result.main.sort = ASCENDING,NONE,NONE
ia.search.Find\u0020emails.composition.Set\u00201.result.main.type = DATETIME,STRING,STRING
ia.search.Find\u0020emails.composition.exportconfigs = PST Export
ia.search.Find\u0020emails.composition.exportenabled = true
ia.search.Find\u0020emails.composition.name = Set 1
ia.search.Find\u0020emails.composition.xform = <xhtml:html xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" \
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"> \
  <xhtml:head> \
    <xforms:model> \
      <xforms:instance xmlns=""> \
        <data> \
          <from /> \
          <recipient /> \
          <distributionList /> \
          <sentDate> \
            <from /> \
            <to /> \
          </sentDate> \
          <fromCountry /> \
          <toCountry /> \
        </data> \
      </xforms:instance> \
      <xforms:instance xmlns="" id="labels"> \
        <labels> \
          <from>Sender</from> \
          <recipient>Recipient</recipient> \
          <distributionList>Distribution list</distributionList> \
          <sentDate>Date Sent</sentDate> \
          <fromCountry>From country</fromCountry> \
          <toCountry>To country</toCountry> \
        </labels> \
      </xforms:instance> \
      <xforms:instance xmlns="" id="hints"> \
        <hints> \
          <from /> \
          <recipient /> \
          <distributionList /> \
          <sentDate /> \
          <fromCountry /> \
          <toCountry /> \
        </hints> \
      </xforms:instance> \
      <xforms:instance xmlns="" id="prompts"> \
        <prompts> \
          <from /> \
          <recipient /> \
          <distributionList /> \
          <fromCountry /> \
          <toCountry /> \
        </prompts> \
      </xforms:instance> \
      <xforms:instance xmlns="" id="alerts"> \
        <alerts> \
          <from /> \
          <recipient /> \
          <distributionList /> \
          <sentDate /> \
          <fromCountry /> \
          <toCountry /> \
        </alerts> \
      </xforms:instance> \
      <xforms:instance xmlns="" id="range-messages"> \
        <rangemessages> \
          <from /> \
          <recipient /> \
          <distributionList /> \
          <fromCountry /> \
          <toCountry /> \
        </rangemessages> \
      </xforms:instance> \
      <xforms:instance xmlns="" id="pattern-messages"> \
        <patternmessages> \
          <from /> \
          <recipient /> \
          <distributionList /> \
          <fromCountry /> \
          <toCountry /> \
        </patternmessages> \
      </xforms:instance> \
      <xforms:submission id="submit01" method="post" serialization="application/xml" /> \
      <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xforms="http://www.w3.org/2002/xforms" \
          targetNamespace="http://www.w3.org/2002/xforms" elementFormDefault="qualified"> \
      </xsd:schema> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/from" /> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/recipient" /> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/distributionList" /> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/fromCountry" /> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/toCountry" /> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/sentDate/from" type="xforms:date" \
          constraint="(string-length(.) = 0 or (days-from-date(.) &lt;= days-from-date(/data/sentDate/to) and string-length(/data/sentDate/to) &gt; 0))" \
          required="true()" /> \
      <bind xmlns="http://www.w3.org/2002/xforms" ref="/data/sentDate/to" type="xforms:date" \
          constraint="(string-length(.) = 0 or (days-from-date(.) &gt;= days-from-date(/data/sentDate/from) and string-length(/data/sentDate/from) &gt; 0))" \
          required="true()" /> \
    </xforms:model> \
  </xhtml:head> \
  <xhtml:body> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="sentDate/from"> \
      <label ref="instance('labels')/sentDate" /> \
      <hint ref="instance('hints')/sentDate" /> \
      <alert ref="instance('alerts')/sentDate" /> \
    </input> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="sentDate/to" /> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="recipient"> \
      <label ref="instance('labels')/recipient" /> \
      <hint ref="instance('hints')/recipient" /> \
      <hint appearance="minimal" ref="instance('prompts')/recipient" /> \
      <alert ref="instance('alerts')/recipient" /> \
      <message class="range" ref="instance('range-messages')/recipient" /> \
      <message class="pattern" ref="instance('pattern-messages')/recipient" /> \
    </input> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="distributionList"> \
      <label ref="instance('labels')/distributionList" /> \
      <hint ref="instance('hints')/distributionList" /> \
      <hint appearance="minimal" ref="instance('prompts')/distributionList" /> \
      <alert ref="instance('alerts')/distributionList" /> \
    </input> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="from"> \
      <label ref="instance('labels')/from" /> \
      <hint ref="instance('hints')/from" /> \
      <hint appearance="minimal" ref="instance('prompts')/from" /> \
      <alert ref="instance('alerts')/from" /> \
      <message class="range" ref="instance('range-messages')/from" /> \
      <message class="pattern" ref="instance('pattern-messages')/from" /> \
    </input> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="fromCountry"> \
      <label ref="instance('labels')/fromCountry" /> \
      <hint ref="instance('hints')/fromCountry" /> \
      <hint appearance="minimal" ref="instance('prompts')/fromCountry" /> \
      <alert ref="instance('alerts')/fromCountry" /> \
      <message class="range" ref="instance('range-messages')/fromCountry" /> \
      <message class="pattern" ref="instance('pattern-messages')/fromCountry" /> \
    </input> \
    <input xmlns="http://www.w3.org/2002/xforms" ref="toCountry"> \
      <label ref="instance('labels')/toCountry" /> \
      <hint ref="instance('hints')/toCountry" /> \
      <hint appearance="minimal" ref="instance('prompts')/toCountry" /> \
      <alert ref="instance('alerts')/toCountry" /> \
      <message class="range" ref="instance('range-messages')/toCountry" /> \
      <message class="pattern" ref="instance('pattern-messages')/toCountry" /> \
    </input> \
  </xhtml:body> \
</xhtml:html> \

ia.search.Find\u0020emails.composition.xform.name = form
ia.search.Find\u0020emails.nestedsearch = false
ia.search.Find\u0020emails.query = DefaultQuery
ia.search.Find\u0020emails.state = DRAFT
ia.search.name = Find emails
ia.xdb.database.admin.password = test
ia.xdb.database.name = Messages
ia.xdb.federation.bootstrap.uri = xhive://localhost:2910
ia.xdb.federation.name = mainFederation
ia.xdb.federation.superuser.password = secret
store.folder = export
store.name = export
store.storetype = RESULT
