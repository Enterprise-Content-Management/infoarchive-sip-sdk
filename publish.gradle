// See http://central.sonatype.org/pages/gradle.html
apply plugin: 'maven'
apply plugin: 'signing'

subprojects.each { prj ->
  prj.task('javadocJar', type: Jar) {
    from prj.javadoc
    classifier 'javadoc'
  }
  
  prj.task('sourcesJar', type: Jar) {
    from prj.sourceSets.main.allSource
    classifier 'sources'
  }
  
  prj.assemble.dependsOn prj.sourcesJar, prj.javadocJar
  
  artifacts {
    archives prj.jar, prj.javadocJar, prj.sourcesJar
  }
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

ext {
  ossrhUsername = project.hasProperty('nexusUsername') ? nexusUsername : ''
  ossrhPassword = project.hasProperty('nexusPassword') ? nexusPassword : ''
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      
      subprojects.each { prj ->
        addFilter(prj.name) { artifact, file ->
          artifact.name == prj.name
        }

        pom(prj.name).project {
          name prj.name
          description prj.description
          packaging 'jar'
          url 'https://github.com/Enterprise-Content-Management/infoarchive-sip-sdk'
  
          scm {
            connection 'https://github.com/Enterprise-Content-Management/infoarchive-sip-sdk.git'
            developerConnection 'https://github.com/Enterprise-Content-Management/infoarchive-sip-sdk.git'
            url 'https://github.com/Enterprise-Content-Management/infoarchive-sip-sdk.git'
          }
  
          licenses {
            license {
              name 'Mozilla Public License Version 2.0'
              url 'https://www.mozilla.org/en-US/MPL/2.0/'
            }
          }
  
          developers {
            developer {
              id = 'ray'
              name = 'Remon Sinnema'
              organization = 'EMC'
              email = 'remon.sinnema@emc.com'
              timezone = 'Europe/Amsterdam'
            }
            developer {
              id = 'tord'
              name = 'Tord Svensson'
              organization = 'EMC'
              email = 'tord.svensson@emc.com'
              timezone = 'Europe/Stockholm'
            }
            developer {
              id = 'mouli'
              name = 'Chandramouli Addaguduru'
              organization = 'EMC'
              email = 'chandramouli.addaguduru@emc.com'
              timezone = 'Asia/Kolkata'
            }
          }
        }
      }
    }
  }
}
