<?xml version="1.0"?>
<ruleset name="NGIS PMD ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd"
	xsi:noNamespaceSchemaLocation="http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

  <description>PMD rules selected for this project</description>
  
	<!-- Not included Java rulesets: android.xml comments.xml javabeans.xml 
		migrating_to_13.xml migrating_to_14.xml migrating_to_15.xml migrating_to_junit4.xml -->

	<rule ref="rulesets/java/basic.xml">
		<!-- http://jira.codehaus.org/browse/SONAR-3154 -->
		<exclude name="AvoidThreadGroup" />
	</rule>

	<rule ref="rulesets/java/braces.xml" />
	<rule ref="rulesets/java/clone.xml" />

	<rule ref="rulesets/java/codesize.xml">
		<exclude name="ExcessiveMethodLength" />
		<exclude name="ExcessivePublicCount" />
		<exclude name="TooManyMethods" />
	</rule>

	<rule ref="rulesets/java/controversial.xml">
		<exclude name="NullAssignment" />
		<exclude name="OnlyOneReturn" />
		<exclude name="AssignmentInOperand" />
		<exclude name="AtLeastOneConstructor" />
		<exclude name="CallSuperInConstructor" />
		<exclude name="DefaultPackage" />
		<exclude name="DataflowAnomalyAnalysis" />
		<exclude name="AvoidFinalLocalVariable" />
		<exclude name="AvoidUsingShortType" />
		<exclude name="AvoidUsingVolatile" />
		<exclude name="AvoidLiteralsInIfCondition" />
		<exclude name="UseConcurrentHashMap" />
		<exclude name="AvoidPrefixingMethodParameters" />
		<exclude name="UseObjectForClearerAPI" />
	</rule>

	<rule ref="rulesets/java/coupling.xml">
		<exclude name="CouplingBetweenObjects" />
		<exclude name="ExcessiveImports" />
		<!-- Too strict and not configurable -->
		<exclude name="LawOfDemeter" />

		<!-- Requires more configuration -->
		<exclude name="LoosePackageCoupling" />
	</rule>

	<rule ref="rulesets/java/design.xml">
		<exclude name="UseUtilityClass" />
		<exclude name="AccessorClassGeneration" />
		<exclude name="NonStaticInitializer" />
		<exclude name="AvoidSynchronizedAtMethodLevel" />
		<exclude name="AbstractClassWithoutAbstractMethod" />
		<exclude name="CompareObjectsWithEquals" />
		<exclude name="UncommentedEmptyMethodBody" />
		<exclude name="UncommentedEmptyConstructor" />
		<exclude name="UseVarargs" />
		<exclude name="AvoidConstantsInterface" />
		<exclude name="GodClass" />		
		<!-- Does not allow inner classes to be at the start of a class -->
		<exclude name="FieldDeclarationsShouldBeAtStartOfClass" />
		<exclude name="SingletonClassReturningNewInstance" />
	</rule>

	<rule ref="rulesets/java/empty.xml">
		<exclude name="EmptyCatchBlock" />
		<exclude name="EmptyIfStmt" />
		<exclude name="EmptyWhileStmt" />
		<exclude name="EmptyTryBlock" />
		<exclude name="EmptyFinallyBlock" />
		<exclude name="EmptySwitchStatements" />
	</rule>

	<rule ref="rulesets/java/finalizers.xml" />
	
	<rule ref="rulesets/java/imports.xml">
	  <exclude name="TooManyStaticImports" />
	</rule>

	<rule ref="rulesets/java/j2ee.xml">
		<exclude name="UseProperClassLoader" />
		<exclude name="DoNotUseThreads" />
	</rule>

	<rule ref="rulesets/java/junit.xml">
		<exclude name="JUnitAssertionsShouldIncludeMessage" />
		<exclude name="JUnitTestsShouldIncludeAssert" />
		<exclude name="TestClassWithoutTestCases" />
		<exclude name="JUnitTestContainsTooManyAsserts" />
	</rule>

	<rule ref="rulesets/java/logging-jakarta-commons.xml">
		<exclude name="GuardDebugLogging" />
    <exclude name="GuardLogStatement" />
	</rule>

  <rule ref="rulesets/java/logging-java.xml">
    <exclude name="GuardLogStatementJavaUtil" />
  </rule>

	<rule ref="rulesets/java/migrating.xml">
		<exclude name="JUnit4TestShouldUseTestAnnotation" />
	</rule>

	<rule ref="rulesets/java/naming.xml">
		<exclude name="ShortVariable" />
		<exclude name="LongVariable" />
		<exclude name="AbstractNaming" />
		<exclude name="AvoidFieldNameMatchingMethodName" />
		
		<!-- Short names can still be descriptive -->
		<exclude name="ShortClassName" />
		<exclude name="ShortMethodName" />
	</rule>

	<rule ref="rulesets/java/optimizations.xml">
		<exclude name="LocalVariableCouldBeFinal" />
		<exclude name="MethodArgumentCouldBeFinal" />
		<exclude name="AvoidInstantiatingObjectsInLoops" />
		<exclude name="SimplifyStartsWith" />
		<exclude name="UseStringBufferForStringAppends" />
	</rule>

	<rule ref="rulesets/java/strictexception.xml">
		<exclude name="SignatureDeclareThrowsException" />
		<exclude name="AvoidThrowingRawExceptionTypes" />
		<exclude name="AvoidCatchingGenericException" />
	</rule>

	<rule ref="rulesets/java/strings.xml">
		<exclude name="AvoidDuplicateLiterals" />
		<exclude name="ConsecutiveAppendsShouldReuse"/>
	</rule>

	<rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
		<properties>
			<property name="skipAnnotations" description="Skip literals within Annotations"
				value="true" />
		</properties>
	</rule>

	<rule ref="rulesets/java/sunsecure.xml" />

	<rule ref="rulesets/java/typeresolution.xml">
		<exclude name="SignatureDeclareThrowsException" />
	</rule>

	<rule ref="rulesets/java/unnecessary.xml">
	  <!-- False positives -->
		<exclude name="UselessParentheses" />
	</rule>

	<rule ref="rulesets/java/unusedcode.xml" >
	  <!-- Too many false positives -->
	  <exclude name="UnusedPrivateMethod" />
	</rule>

</ruleset>
