server:
  uri: http://localhost:8765/services
  token: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjM2MDU4Mjg3NjEsInVzZXJfbmFtZSI6InN1ZUBpYWN1c3RvbWVyLmNvbSIsImF1dGhvcml0aWVzIjpbIkdST1VQX0FETUlOSVNUUkFUT1IiLCJHUk9VUF9SRVRFTlRJT05fTUFOQUdFUiIsIkdST1VQX0JVU0lORVNTX09XTkVSIiwiR1JPVVBfRU5EX1VTRVIiLCJHUk9VUF9ERVZFTE9QRVIiLCJHUk9VUF9JVF9PV05FUiIsIlJPTEVfQURNSU5JU1RSQVRPUiIsIlJPTEVfUkVURU5USU9OX01BTkFHRVIiLCJST0xFX0JVU0lORVNTX09XTkVSIiwiUk9MRV9FTkRfVVNFUiIsIlJPTEVfREVWRUxPUEVSIiwiUk9MRV9JVF9PV05FUiJdLCJqdGkiOiJiODhmMGEwMi0yNTMyLTQ2OWUtYmU4ZC1iYWVkZjM5OTExNDIiLCJjbGllbnRfaWQiOiJpbmZvYXJjaGl2ZS5pYXdhIiwic2NvcGUiOlsiYWRtaW5pc3RyYXRpb24iLCJjb21wbGlhbmNlIiwic2VhcmNoIl19.tRNjesTSzMYmpFNP1xCPl_SHUetGtLvyHzvc59TCqF0

xdb:
  federation:
    name: animal
    password: test
    uri: xhive://localhost:2910
  database:
    name: animal
    password: test

retention-policy:
  name: Animals

aic:
  name: Animal

quota:
  name: DefaultQuota

tenant: TENANT

application:
  name: Animals
  description: Sample application
  category: Sample category

holding:
  name: Animals

pdi:
  schema:
    name: "urn:opentext:ia:schema:sample:animal:1.0"
    xsd: >
      <?xml version="1.0" encoding="UTF-8"?>
      <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
          targetNamespace="urn:opentext:ia:schema:sample:animal:1.0" xmlns:animal="urn:opentext:ia:schema:sample:animal:1.0">
        <xs:element name="animals">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" ref="animal:animal"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="animal">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="animal:animal_name"/>
              <xs:element ref="animal:file_path"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="animal_name" type="xs:string"/>
        <xs:element name="file_path" type="xs:string"/>
      </xs:schema>
  xml: >
    <?xml version="1.0" encoding="UTF-8"?>
    <datas>
      <data>
        <id>pdi.index.creator</id>
        <key.document.name>xdb.pdi.name</key.document.name>
        <indexes>
          <path.value.index>
            <name>animal_name</name>
            <path>/{urn:opentext:ia:schema:sample:animal:1.0}animals/{urn:opentext:ia:schema:sample:animal:1.0}animal/animal_name&lt;STRING>
            </path>
            <compressed>false</compressed>
            <unique.keys>false</unique.keys>
            <concurrent>false</concurrent>
            <build.without.logging>true</build.without.logging>
          </path.value.index>
          <path.value.index>
            <name>file_path</name>
            <path>/{urn:opentext:ia:schema:sample:animal:1.0}animals/{urn:opentext:ia:schema:sample:animal:1.0}animal/file_path&lt;STRING>
            </path>
            <compressed>false</compressed>
            <unique.keys>false</unique.keys>
            <concurrent>false</concurrent>
            <build.without.logging>true</build.without.logging>
          </path.value.index>
        </indexes>
      </data>
      <data>
        <id>pdi.aiu.id</id>
        <select.query>
          <![CDATA[
            declare namespace n = "urn:opentext:ia:schema:sample:animal:1.0";
            for $animal in /n:animals/n:animal
            return ($animal, $animal/text())
          ]]>
        </select.query>
      </data>
      <data>
        <id>pdi.aiu.cnt</id>
        <select.query>
          <![CDATA[
            declare namespace n = "urn:opentext:ia:schema:sample:animal:1.0";
            count(/n:animals/n:animal)
          ]]>
        </select.query>
      </data>
      <data>
        <id>pdi.pkeys</id>
        <pkey attr="string01">
          <![CDATA[
            declare namespace n = "urn:opentext:ia:schema:sample:animal:1.0";
            let $animals := (for $animal in /n:animals/n:animal/text()
            order by $animal
            return $animal)
            return fn:upper-case(fn:substring($animals[1], 1, 1))
          ]]>
        </pkey>
        <pkey attr="string02">
          <![CDATA[
            declare namespace n = "urn:opentext:ia:schema:sample:animal:1.0";
            let $animals := (for $animal in /n:animals/n:animal/text()
            order by $animal descending
            return $animal)
            return fn:upper-case(fn:substring($animals[1], 1, 1))
          ]]>
        </pkey>
      </data>
    </datas>

ingest:
  xml: >
    <processors>
      <processor>
        <name>SIP downloader processor</name>
        <class>com.emc.ia.ingestion.processor.downloader.SipContentDownloader</class>
      </processor>
      <processor>
        <name>SIP Decrypter processor</name>
        <class>com.emc.ia.ingestion.processor.crypto.SipDecryptProcessor</class>
        <id>sip.decrypt</id>
      </processor>
      <processor>
        <name>SIP extractor processor</name>
        <class>com.emc.ia.ingestion.processor.extractor.SipExtractor</class>
        <id>sip.extractor</id>
        <data>
          <pdi.name>eas_pdi.xml</pdi.name>
          <sip.name>eas_sip.xml</sip.name>
        </data>
      </processor>
      <processor>
        <name>PDI hash validation processor</name>
        <class>com.emc.ia.ingestion.processor.hash.PdiHashValidatorProcessor</class>
      </processor>
      <processor>
        <name>PDI schema validator processor</name>
        <class>com.emc.ia.ingestion.processor.validator.PdiSchemaValidator</class>
        <data>
          <id>pdi.validation</id>
          <parameter>
            <are.whiteSpaces.ignored>false</are.whiteSpaces.ignored>
          </parameter>
        </data>
      </processor>
      <processor>
        <name>PDI data encryption</name>
        <class>com.emc.ia.ingestion.processor.crypto.PdiDataEncryptProcessor</class>
        <id>pdi.data.encrypt</id>
      </processor>
      <processor>
        <name>XDB Library creator processor</name>
        <class>com.emc.ia.ingestion.processor.library.LibraryCreatorProcessor</class>
      </processor>
      <processor>
        <name>XDB SIP importer processor</name>
        <class>com.emc.ia.ingestion.processor.importer.SipImporterProcessor</class>
      </processor>
      <processor>
        <name>XDB PDI importer processor</name>
        <class>com.emc.ia.ingestion.processor.importer.PdiImporterProcessor</class>
        <id>pdi.xdb.importer</id>
      </processor>
      <processor>
        <name>XDB PDI index processor</name>
        <class>com.emc.ia.ingestion.processor.index.IndexesCreator</class>
        <id>pdi.index.creator</id>
        <data>
          <key.document.name>xdb.pdi.name</key.document.name>
          <indexes />
        </data>
      </processor>
      <processor>
        <name>PDI AIU Ids processor</name>
        <class>com.emc.ia.ingestion.processor.aiu.PdiAiuIdProcessor</class>
        <id>pdi.aiu.id</id>
      </processor>
      <processor>
        <name>PDI AIU count processor</name>
        <class>com.emc.ia.ingestion.processor.aiu.PdiAiuCountProcessor</class>
        <id>pdi.aiu.cnt</id>
      </processor>
      <processor>
        <name>XDB AIU index processor</name>
        <class>com.emc.ia.ingestion.processor.index.IndexesCreator</class>
        <id>xdb.pdi.aiu.index</id>
        <data>
          <key.document.name>xdb.pdi.name</key.document.name>
          <indexes>
            <value.index>
              <name>pdi.aiu.id</name>
              <compressed>false</compressed>
              <unique.keys>true</unique.keys>
              <concurrent>false</concurrent>
              <value.index.type>STRING</value.index.type>
              <element.uri />
              <element.name />
              <attribute.uri>urn:x-emc:ia:schema:pdi</attribute.uri>
              <attribute.name>id</attribute.name>
            </value.index>
          </indexes>
        </data>
      </processor>
      <processor>
        <name>PDI Partition Keys processor</name>
        <class>com.emc.ia.ingestion.processor.partition.PartitionValuesProcessor</class>
        <id>pdi.pkeys</id>
      </processor>
      <processor>
        <name>PDI XML compression processor</name>
        <class>com.emc.ia.ingestion.processor.compress.PdiCompressionProcessor</class>
      </processor>
      <processor>
        <name>PDI XML encryption processor</name>
        <class>com.emc.ia.ingestion.processor.crypto.PdiFileEncryptProcessor</class>
        <id>pdi.encrypt</id>
      </processor>
      <processor>
        <transaction />
        <name>XDB library backup</name>
        <class>com.emc.ia.ingestion.processor.backup.BackupProcessor</class>
      </processor>
      <processor>
        <name>PDI Transformer</name>
        <class>com.emc.ia.ingestion.processor.transformer.PdiTransformerProcessor</class>
        <id>pdi.transformer</id>
        <data>
          <resultSchema></resultSchema>
        </data>
      </processor>
      <processor>
        <name>Synchronous commit</name>
        <class>com.emc.ia.ingestion.processor.commit.CommitProcessor</class>
      </processor>
    </processors>
